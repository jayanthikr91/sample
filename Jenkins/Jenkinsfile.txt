node{

checkout scm;
def prop=readProperties  file: 'Properties/propertiesfile.txt'
def pom=readMavenPom  file: 'pom.xml'

try{
stage('checkout')

{
echo "${prop}"
def giturl=prop.GIT_URL
echo "giturl=${giturl}"
git "${giturl}"
}

stage ('build'){

def buildcmd="mvn clean install"
echo "${buildcmd}"
sh "${buildcmd}"

}

stage('code analysis'){
    echo "${prop}"
    def mvncmd=prop.MAVEN_SONAR_CMD
    def sonarurl=prop.SONAR_URL
    def url=mvncmd+sonarurl
    echo "${url}"
    sh "${url}"
}
stage('Artifactory upload')
{
def server = Artifactory.server "${prop.ARTIFACT_ID}"
def uploadSpec = """{
 	
"files":[
{
"pattern":"target/*.war",
"target":"hello/${pom.artifactId}/${pom.version}.${BUILD_NUMBER}"
}
]
}"""
server.upload(uploadSpec)
}

stage('email'){
    emailext body: 'Build is successful', subject: 'email notification', to: 'jayanthikr91@gmail.com'
  }
  }
  catch(Exception e){
  stage('email'){
    emailext body: 'Build is unsuccessful', subject: 'email notification', to: 'jayanthikr91@gmail.com'
  }
  }
}
